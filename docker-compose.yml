services:
  traefik:
    image: traefik:v2.10
    command:
      - "--configFile=/etc/traefik/sites/elcompadremix/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/dokploy/traefik/sites/elcompadremix/traefik.yml:/etc/traefik/sites/elcompadremix/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/dokploy/traefik/sites/elcompadremix/letsencrypt:/letsencrypt
      - /etc/dokploy/traefik/sites/elcompadremix:/etc/traefik/sites/elcompadremix
    networks:
      - default
      - dokploy-network

  web:
    build: .
    command: bash -c "
      until nc -z db 5432; do echo '‚è≥ Esperando a DB...'; sleep 1; done;
      echo '‚úÖ DB lista';
      python manage.py migrate &&
      gunicorn config.wsgi:application --bind 0.0.0.0:8005"
    volumes:
      - .:/code
    working_dir: /code
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - default
      - dokploy-network
    labels:
      - traefik.enable=true

      # HTTPS
      - traefik.http.routers.compadresecure.rule=Host(`elcompadremix.com`)
      - traefik.http.routers.compadresecure.entrypoints=websecure
      - traefik.http.routers.compadresecure.tls.certresolver=letsencrypt
      - traefik.http.routers.compadresecure.service=compadremixservice
      - traefik.http.routers.compadresecure.middlewares=forwarded-headers

      # HTTP redirige a HTTPS
      - traefik.http.routers.compadre.rule=Host(`elcompadremix.com`)
      - traefik.http.routers.compadre.entrypoints=web
      - traefik.http.routers.compadre.middlewares=redirect-to-https
      - traefik.http.routers.compadre.service=compadremixservice

      # Middleware definido
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

      # üöÄ Middleware que pasa encabezado HTTPS a Django
      - traefik.http.middlewares.forwarded-headers.headers.customrequestheaders.X-Forwarded-Proto=https

      # Servicio (puerto donde escucha Gunicorn dentro del contenedor)
      - traefik.http.services.compadremixservice.loadbalancer.server.port=8005

  db:
    image: postgres:15
    volumes:
      - postgres_compadre_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    networks:
      - default
      - dokploy-network

volumes:
  postgres_compadre_data:

networks:
  default:
    driver: bridge
  dokploy-network:
    external: true
