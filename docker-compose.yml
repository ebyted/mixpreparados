version: "3.8"

services:
  web:
    build: ./app1
    command: bash -c "
      until nc -z db1 5432; do echo '⏳ Esperando a DB1...'; sleep 1; done;
      echo '✅ DB1 lista';
      python manage.py migrate &&
      gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./app1:/code
    working_dir: /code
    env_file:
      - ./app1/.env
    depends_on:
      - db1
    ports:
      - "8000:8000"  # Exponiendo puerto 8000 al exterior
    networks:
      - default

  web2:
    build: ./app2
    command: bash -c "
      until nc -z db2 5432; do echo '⏳ Esperando a DB2...'; sleep 1; done;
      echo '✅ DB2 lista';
      python manage.py migrate &&
      gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./app2:/code
    working_dir: /code
    env_file:
      - ./app2/.env
    depends_on:
      - db2
    ports:
      - "8001:8000"  # Exponiendo otro puerto externo
    networks:
      - default

  db1:
    image: postgres:15
    volumes:
      - postgres_data1:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    networks:
      - default

  db2:
    image: postgres:15
    volumes:
      - postgres_data2:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB2}
      - POSTGRES_USER=${POSTGRES_USER2}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD2}
    restart: always
    networks:
      - default

volumes:
  postgres_data1:
  postgres_data2:

networks:
  default:
    driver: bridge
